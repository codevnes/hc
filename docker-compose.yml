version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=${API_URL:-http://localhost:5000/api}
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=${API_URL:-http://localhost:5000/api}
      - NEXT_PUBLIC_TINYMCE_API_KEY=gqcpkc0yu6t37vrh6jaiwx7ugf0nn5o2rc106o1ugk1gwz2v
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: always
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
      - DB_HOST=db
      - DB_USER=root
      - DB_PASSWORD=hcstock123
      - DB_NAME=hc_stock
      - JWT_SECRET=hc_stock_secret_key_very_secure
      - CORS_ORIGIN=${CORS_ORIGINS:-http://localhost:3000,http://127.0.0.1:3000,http://frontend:3000}
    depends_on:
      - db
    volumes:
      - ./backend/uploads:/app/uploads
    networks:
      - app-network

  db:
    image: mysql:8.0
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=hcstock123
      - MYSQL_DATABASE=hc_stock
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./backend/database/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./backend/database/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - ./backend/database/data.sql:/docker-entrypoint-initdb.d/data.sql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data: 